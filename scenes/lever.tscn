[gd_scene load_steps=7 format=2]

[ext_resource path="res://assets/lever_on.png" type="Texture" id=1]
[ext_resource path="res://assets/lever_off.png" type="Texture" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

signal flicked

const INTERACT_COOLDOWN_LENGTH = 0.5 # In Seconds
var interact_cooldown = 0

export var is_on = false setget set_is_on

func set_is_on(value):
	is_on = value
	if is_on :
		_on()
	else:
		_off()

func _process(delta):
	if interact_cooldown > 0 :
		interact_cooldown -= delta

func _on():
	is_on = true
	$AnimatedSprite.play(\"on\")
	
func _off():
	is_on = false
	$AnimatedSprite.play(\"off\")#

func toggle():
	if is_on :
		_off()
	else :
		_on()
	emit_signal(\"flicked\")

func _on_Area2D_interacted():
	if interact_cooldown <= 0 :
		toggle()
		interact_cooldown = INTERACT_COOLDOWN_LENGTH
	
"

[sub_resource type="GDScript" id=2]
script/source = "extends Area2D


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

signal interacted

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


func interact():
	emit_signal(\"interacted\")

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass
"

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 8, 4 )

[sub_resource type="SpriteFrames" id=4]
animations = [ {
"frames": [ ExtResource( 1 ) ],
"loop": true,
"name": "on",
"speed": 5.0
}, {
"frames": [ ExtResource( 2 ) ],
"loop": true,
"name": "off",
"speed": 5.0
} ]

[node name="lever" type="Node2D" groups=[
"lever",
]]
script = SubResource( 1 )

[node name="Area2D" type="Area2D" parent="." groups=[
"interactable",
]]
script = SubResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2( 0, -4 )
shape = SubResource( 3 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
position = Vector2( 0, -8 )
frames = SubResource( 4 )
animation = "off"
[connection signal="interacted" from="Area2D" to="." method="_on_Area2D_interacted"]
